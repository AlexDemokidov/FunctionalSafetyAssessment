openapi: 3.0.3

info:
  title: Projects API
  description: API that allows you to manage projects for DigitalTwin
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: local development server

# paths:
#   /projects:
#     get:
#       parameters:
#       - name: cancelled
#         in: query
#         required: false
#         schema:
#           type: boolean
#       - name: limit
#         in: query
#         required: false
#         schema:
#           type: integer
#       summary: Returns a list of projects
#       operationId: getprojects
#       description: >
#         A list of projects made by the customer
#         sorted by date. Allows to filter projects
#         by range of dates.
#       responses:
#         '200':
#           description: A JSON array of projects
#           content:
#             application/json:
#               schema:
#                 type: object
#                 additionalProperties: false
#                 properties:
#                   projects:
#                     type: array
#                     items:
#                       $ref: '#/components/schemas/GetProjectSchema'
#         '422':
#           $ref: '#/components/responses/UnprocessableEntity'

#     post:
#       summary: Creates an project
#       operationId: createproject
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/CreateprojectSchema'
#       responses:
#         '201':
#           description: A JSON representation of the created project
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/GetprojectSchema'
#         '422':
#           $ref: '#/components/responses/UnprocessableEntity'

#   /projects/{project_id}:
#     parameters:
#       - in: path
#         name: project_id
#         required: true
#         schema:
#           type: string
#           format: uuid
#     get:
#       summary: Returns the details of a specific project
#       operationId: getproject
#       responses:
#         '200':
#           description: OK
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/GetprojectSchema'
#         '404':
#           $ref: '#/components/responses/NotFound'
#         '422':
#           $ref: '#/components/responses/UnprocessableEntity'

#     put:
#       summary: Replaces an existing project
#       operationId: updateproject
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/CreateprojectSchema'
#       responses:
#         '200':
#           description: OK
#           content:
#             application/json:
#               schema:
#                 $ref:  '#/components/schemas/GetprojectSchema'
#         '404':
#           $ref: '#/components/responses/NotFound'
#         '422':
#           $ref: '#/components/responses/UnprocessableEntity'

#     delete:
#       summary: Deletes an existing project
#       operationId: deleteproject
#       responses:
#         '204':
#           description: The resource was deleted successfully
#         '404':
#           $ref: '#/components/responses/NotFound'
#         '422':
#           $ref: '#/components/responses/UnprocessableEntity'

# components:
#   responses:
#     NotFound:
#       description: The specified resource was not found.
#       content:
#         application/json:
#           schema:
#             $ref: '#/components/schemas/Error'
#     UnprocessableEntity:
#       description: The payload contains invalid values.
#       content:
#         application/json:
#           schema:
#             $ref: '#/components/schemas/Error'

#   securitySchemes:
#     openId:
#       type: openIdConnect
#       openIdConnectUrl: https://coffeemesh-dev.eu.auth0.com/.well-known/openid-configuration
#     oauth2:
#       type: oauth2
#       flows:
#         clientCredentials:
#           tokenUrl: https://coffeemesh-dev.eu.auth0.com/oauth/token
#           scopes: {}
#     bearerAuth:
#       type: http
#       scheme: bearer
#       bearerFormat: JWT

#   schemas:
#     Error:
#       type: object
#       properties:
#         detail:
#           oneOf:
#             - type: string
#             - type: array
#       required:
#         - detail
#       additionalProperties: false

#     projectItemSchema:
#       additionalProperties: false
#       type: object
#       required:
#         - product
#         - size
#       properties:
#         product:
#           type: string
#         size:
#           type: string
#           enum:
#             - small
#             - medium
#             - big
#         quantity:
#           type: integer
#           format: int64
#           default: 1
#           minimum: 1
#           maximum: 1000000

#     CreateprojectSchema:
#       additionalProperties: false
#       type: object
#       required:
#         - project
#       properties:
#         project:
#           type: array
#           minItems: 1
#           items:
#             $ref: '#/components/schemas/projectItemSchema'

#     GetprojectSchema:
#       additionalProperties: false
#       type: object
#       required:
#         - id
#         - created
#         - status
#         - project
#       properties:
#         id:
#           type: string
#           format: uuid
#         created:
#           type: string
#           format: date-time
#         status:
#           type: string
#           enum:
#             - created
#             - paid
#             - progress
#             - cancelled
#             - dispatched
#             - delivered
#         project:
#           type: array
#           minItems: 1
#           items:
#             $ref: '#/components/schemas/projectItemSchema'

# security:
#   - oauth2:
#       - getprojects
#       - createproject
#       - getproject
#       - updateproject
#       - deleteproject
#       - payproject
#       - cancelproject
#   - bearerAuth:
#       - getprojects
#       - createproject
#       - getproject
#       - updateproject
#       - deleteproject
#       - payproject
#       - cancelproject
